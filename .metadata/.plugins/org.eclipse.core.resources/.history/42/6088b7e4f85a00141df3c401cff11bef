/**
 * 
 */
package com.problem;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.junit.Test;

public class NewSolV2 {

	public static void main(String[] args) {

		String s = "There is no place place for the audi in this world. audi is place of the world. world has place for the great audi";

		String[] words = s.split(" ");

		String w1 = "audi";
		String w2 = "place";

		String shortSen = printShortSentence(words, w1, w2);

		System.out.println(shortSen);

	}

	private static String printShortSentence(String[] s, String w1, String w2) {

		List<String> ls = new ArrayList<String>(Arrays.asList(s));

		int sizeOfList = ls.size();

		List<Integer> l1 = new ArrayList<Integer>();
		List<Integer> l2 = new ArrayList<Integer>();

		for (int i = 0; i < sizeOfList; i++) {

			if (ls.get(i).equals(w1))
				l1.add(i);
			if (ls.get(i).equals(w2))
				l2.add(i);
		}

		int[] pos = getShortSentence(s, l1, l2);

		StringBuffer sb = new StringBuffer();

		while (pos[1] <= pos[2]) {
			sb.append(s[pos[1]++]).append(" ");
		}

		String shortSentence = sb.toString();

		return shortSentence;

	}

	private static int[] getShortSentence(String[] s, List<Integer> l1,
			List<Integer> l2) {
		int min = Integer.MAX_VALUE;

		int start = 0, end = 0;

		for (int i = 0; i < l1.size(); i++) {

			for (int j = 0; j < l2.size(); j++) {

				if (min > Math.abs(l1.get(i) - l2.get(j))) {

					min = Math.abs(l1.get(i) - l2.get(j));
					start = l1.get(i);
					end = l2.get(j);
				}
			}
		}

		StringBuffer sb = new StringBuffer();

		while (start <= end) {
			sb.append(s[start++]).append(" ");
		}

		String shortSentence = sb.toString().trim();

		return n;
	}

	@Test
	public void testWithValidData() {

		String s = "There is no place place for the audi in this world. audi is place of the world. world has place for the great audi";

		String[] words = s.split(" ");

		String w1 = "audi";
		String w2 = "place";

		assertEquals("audi is place ", printShortSentence(words, w1, w2));

		w1 = "for";
		w2 = "great";
		assertEquals("for the great ", printShortSentence(words, w1, w2));
	}
}
